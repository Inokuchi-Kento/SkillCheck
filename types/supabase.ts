/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/employees": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employees.id"];
          name?: parameters["rowFilter.employees.name"];
          role?: parameters["rowFilter.employees.role"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["employees"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** employees */
          employees?: definitions["employees"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employees.id"];
          name?: parameters["rowFilter.employees.name"];
          role?: parameters["rowFilter.employees.role"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employees.id"];
          name?: parameters["rowFilter.employees.name"];
          role?: parameters["rowFilter.employees.role"];
        };
        body: {
          /** employees */
          employees?: definitions["employees"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/skills": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.skills.id"];
          item?: parameters["rowFilter.skills.item"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["skills"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** skills */
          skills?: definitions["skills"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.skills.id"];
          item?: parameters["rowFilter.skills.item"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.skills.id"];
          item?: parameters["rowFilter.skills.item"];
        };
        body: {
          /** skills */
          skills?: definitions["skills"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/employee_skills": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employee_skills.id"];
          employee_id?: parameters["rowFilter.employee_skills.employee_id"];
          skill_id?: parameters["rowFilter.employee_skills.skill_id"];
          score?: parameters["rowFilter.employee_skills.score"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["employee_skills"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** employee_skills */
          employee_skills?: definitions["employee_skills"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employee_skills.id"];
          employee_id?: parameters["rowFilter.employee_skills.employee_id"];
          skill_id?: parameters["rowFilter.employee_skills.skill_id"];
          score?: parameters["rowFilter.employee_skills.score"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employee_skills.id"];
          employee_id?: parameters["rowFilter.employee_skills.employee_id"];
          skill_id?: parameters["rowFilter.employee_skills.skill_id"];
          score?: parameters["rowFilter.employee_skills.score"];
        };
        body: {
          /** employee_skills */
          employee_skills?: definitions["employee_skills"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  employees: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    name: string;
    /**
     * Format: text
     * @default Development
     */
    role?: string;
  };
  skills: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    item?: string;
  };
  employee_skills: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: bigint */
    employee_id: number;
    /** Format: bigint */
    skill_id: number;
    /** Format: integer */
    score: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description employees */
  "body.employees": definitions["employees"];
  /** Format: bigint */
  "rowFilter.employees.id": string;
  /** Format: text */
  "rowFilter.employees.name": string;
  /** Format: text */
  "rowFilter.employees.role": string;
  /** @description skills */
  "body.skills": definitions["skills"];
  /** Format: bigint */
  "rowFilter.skills.id": string;
  /** Format: text */
  "rowFilter.skills.item": string;
  /** @description employee_skills */
  "body.employee_skills": definitions["employee_skills"];
  /** Format: bigint */
  "rowFilter.employee_skills.id": string;
  /** Format: bigint */
  "rowFilter.employee_skills.employee_id": string;
  /** Format: bigint */
  "rowFilter.employee_skills.skill_id": string;
  /** Format: integer */
  "rowFilter.employee_skills.score": string;
}

export interface operations {}

export interface external {}
